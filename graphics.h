#pragma once

typedef struct{		//Struct för x och y koordinat
	char x;
	char y;
}POINT, *PPOINT;

#define MAX_POINTS 750	//struct för geometriska objekt (MAX_POINTS anger max antalet pixlar)
typedef struct{
	int numpoints;
	int sizex;
	int sizey;
	POINT px[ MAX_POINTS ]
}GEOMETRY, *PGEOMETRY;

typedef struct tObj{	//generell struct för att styra och skapa objekt på skärmen
	PGEOMETRY geo;
	int dirx, diry;
	int posx, posy;
	void (* draw ) (struct tObj *);
	void (* clear ) (struct tObj *);
	void (* move ) (struct tObj *);
	void (* set_speed ) (struct tObj *, int, int);
}OBJECT, *POBJECT;

void graphic_initalize(void);
void graphic_clear_screen(void);
void graphic_pixel_set( int x, int y);
void graphic_pixel_clear( int x, int y);

void clear_life_object(POBJECT o){
	for( int p = 135; p > o->geo->sizex; p--){
        graphic_pixel_clear(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
		 if( p % 4 == 0 ){
		  delay_milli(300);  
		 }
    }	
}

void draw_life_object(POBJECT o){
     for( int p = 0; p < (sizeof( o->geo->px ))/(sizeof(POINT)); p++){
		  graphic_pixel_set(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
		 if( (p+1) % 4==0 ){ 
           if(p<132){ 
		   delay_milli(300);
		   }
		}
    }
}

void draw_object(POBJECT o){
     for( int p = 0; p < (sizeof( o->geo->px ))/(sizeof(POINT)); p++){
		  graphic_pixel_set(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
		 
    }
}

void clear_object(POBJECT o){
	for( int p = 0; p < (sizeof( o->geo->px ))/(sizeof(POINT)); p++){
        graphic_pixel_clear(o->geo->px[p].x + o->posx, o->geo->px[p].y + o->posy);
	}
}

void move_object(POBJECT o){
	clear_object( o );
	o->posx += o->dirx;
	o->posy += o->diry;
	
	draw_object( o );
}

void move_tackle(POBJECT o){
	
	 
	o->clear(o);	
	o->posx += o->dirx;
	o->draw(o);
	
	delay_milli(750);
	 
	o->clear(o);	
	o->posx -= o->dirx;
	o->draw(o);
	
	
	
}

void set_object_speed(POBJECT o, int speedx, int speedy){
	o->dirx = speedx;
	o->diry = speedy;
}

int pixel_overlap(POBJECT o1, POBJECT o2) { //processkrävande funktion, kallas helst inte på
  int offset1x = o1->posx;
  int offset1y = o1->posy;
  int offset2x = o2->posx;
  int offset2y = o2->posy;
  for (int i = 0; i < o1->geo->numpoints; i++) {
    for (int j = 0; j < o2-> geo->numpoints; j++)
      if ((offset1x + o1->geo->px[i].x == offset2x + o2->geo->px[j].x) &&
        (offset1y + o1->geo->px[i].y == offset2y + o2->geo->px[j].y)) return 1;
  }
  return 0;
}

//om delta posx, posy mellan dom två objekten är mindre än definierad sizex och sizey så vet vi att "fyrkanterna" rör varandra, då kallas pixel overlapp
int objects_overlap(POBJECT victim, POBJECT creature){
	int creatureX = creature->posx;
	int creatureY = creature->posy;
	int victimX = victim->posx;
	int victimY = victim->posy;
	if((abs(victimX - creatureX) <= victim->geo->sizex) && (abs(victimY - creatureY) <= victim->geo->sizey)){
	  if (pixel_overlap(victim, creature))  {
		return 1;
		}
	}
	return 0;
}



GEOMETRY pedro = {    
    100,
    100,
    100,
    {
        {9,0}, {10,0}, {11,0}, {12,0}, {13,0}, {14,0}, {15,0}, {8,1}, {9,1}, {15,1}, {16,1}, {17,1}, {17,2}, {18,2}, {19,2}, {20,2}, {21,2}, {21,3}, 
        {21,4}, {21,5}, {22,6}, {20,6}, {19,6}, {18,7}, {19,7}, {21,7}, {22,7}, {22,8}, {22,9}, {22,10}, {23,12}, {23,13}, {22,14}, {22,15}, {22,16},
        {21,16}, {20,16}, {19,16}, {18,17}, {18,18}, {19,18}, {19,19}, {19,20}, {20,20}, {20,21}, {21,21}, {21,22}, {22,22}, {22,23}, {23,23}, {24,23}, 
        {24,22}, {25,22}, {26,22}, {27,22}, {27,23}, {28,23}, {28,24}, {29,24}, {29,25}, {30,25}, {30,26}, {30,27}, {30,28}, {29,28}, {28,28},
        {28,27}, {27,26}, {26,26}, {26,25}, {25,25}, {24,25}, {24,24}, {28,29}, {27,29}, {26,29}, {26,30}, {25,30}, {24,30}, {24,29}, {24,28}, {23,30}, 
        {22,30}, {22,29}, {21,29}, {20,29}, {19,29}, {19,28}, {19,28}, {17,28}, {16,27}, {16,28}, {16,29}, {16,30}, {16,31}, {16,32}, {16,33},
        {16,34}, {4,34}, {4,33}, {4,32}, {4,31}, {4,30}, {4,29}, {4,28}, {4,27}, {0,34}, {0,33}, {0,32}, {0,31}, {0,30}, {0,29}, {0,28}, {0,27}, {0,26}, 
        {0,25}, {0,24}, {0,23}, {0,22}, {1,22}, {1,21}, {1,20}, {2,20}, {2,19}, {3,19}, {4,19}, {4,18}, {5,18}, {6,18}, {7,18}, {8,18}, {8,19}, {9,19},
        {10,19}, {11,19}, {12,19}, {13,19}, {14,19}, {15,19}, {16,19}, {17,19}, {8,17}, {7,17}, {6,16}, {7,16}, {8,16}, {9,16}, {10,16}, {11,16}, {12,16}, 
        {13,16}, {14,16}, {15,16}, {10,17}, {12,17}, {14,17}, {15,15}, {15,14}, {16,14}, {17,14}, {17,13}, {17,12}, {17,11}, {17,10}, {17,9},
        {18,9}, {18,8}, {20,9}, {20,10}, {20,11}, {6,15}, {5,15}, {5,14}, {5,13}, {4,13}, {4,12}, {4,11}, {4,10}, {4,9}, {4,8}, {4,7}, {4,6}, 
        {4,5}, {4,4}, {5,4}, {5,3}, {6,3}, {7,3}, {7,2}, {8,2}
    }

    
};
GEOMETRY pika = {
	100,
	100,
	100,
    {{17,0},{18,0},{17,1},{18,1},
    {16,2},{17,2},{18,2},{19,2},{40,2},{41,2},{42,2},
	{16,3},{17,3},{18,3},{19,3},{37,3},{38,3},{39,3},{40,3},{41,3},{42,3},
	{16,4},{17,4},{18,4},{19,4},{20,4},{35,4},{36,4},{37,4},{38,4},{39,4},{40,4},{41,4},{42,4},
	{16,5},{17,5},{18,5},{19,5},{20,5},{33,5},{34,5},{35,5},{36,5},{37,5},{38,5},{39,5},{40,5},{41,5},
	{16,6},{17,6},{20,6},{21,6},{32,6},{33,6},{36,6},{37,6},{38,6},{39,6},{40,6},{47,6},{48,6},{49,6},
	{16,7},{21,7},{31,7},{32,7},{37,7},{38,7},{39,7},{46,7},{47,7},{49,7},
	{16,8},{21,8},{22,8},{31,8},{37,8},{38,8},{45,8},{46,8},{49,8},{50,8},
	{17,9},{22,9},{30,9},{36,9},{37,9},{44,9},{45,9},{50,9},
	{17,10},{22,10},{23,10},{24,10},{25,10},{26,10},{27,10},{28,10},{29,10},{34,10},{35,10},{36,10},{43,10},{44,10},{50,10},
	{17,11},{19,11},{33,11},{34,11},{41,11},{42,11},{43,11},{50,11},
	{18,12},{33,12},{40,12},{41,12},{50,12},
	{17,13},{18,13},{33,13},{34,13},{39,13},{40,13},{50,13},
	{17,14},{28,14},{29,14},{34,14},{38,14},{39,14},{50,14},
	{17,15},{20,15},{21,15},{27,15},{29,15},{30,15},{35,15},{37,15},{38,15},{50,15},
	{16,16},{19,16},{21,16},{27,16},{28,16},{29,16},{30,16},{35,16},{36,16},{37,16},{49,16},{50,16},
	{16,17},{19,17},{20,17},{21,17},{28,17},{29,17},{35,17},{36,17},{47,17},{48,17},{49,17},
	{16,18},{20,18},{23,18},{35,18},{45,18},{46,18},{47,18},
	{16,19},{30,19},{31,19},{35,19},{44,19},{45,19},
	{17,20},{23,20},{24,20},{25,20},{26,20},{29,20},{30,20},{31,20},{32,10},{34,20},{44,20},
	{18,21},{23,21},{24,21},{29,21},{30,21},{31,21},{32,21},{34,21},{35,21},{36,21},{37,21},{44,21},{45,21},
	{14,22},{15,22},{16,22},{18,22},{23,22},{26,22},{30,22},{31,22},{33,22},{34,22},{38,22},{45,22},{46,22},
	{13,23},{14,23},{17,23},{18,23},{19,23},{24,23},{25,23},{32,23},{38,23},{46,23},
	{13,24},{18,24},{19,24},{31,24},{38,24},{44,24},{45,24},{46,24},
	{13,25},{14,25},{19,25},{37,25},{43,25},{44,25},
	{14,26},{15,26},{36,26},{37,26},{41,26},{42,26}, {43,26},
	{15,27},{35,27},{36,27},{40,27},{41,27},
	{15,28},{16,28},{35,28},{40,28},
	{16,29},{17,29},{34,29},{35,29},{40,29},{41,29},
	{16,30},{34,30},{35,30},{36,30},{42,30},
	{16,31},{34,31},{36,31},{37,31},{43,31},
	{15,32},{16,32},{34,32},{37,32},{38,32},{39,32},{40,32},{43,32},
	{13,33},{14,33},{15,33},{16,33},{17,33},{34,33},{35,33},{36,33},{37,33},{38,33},{39,33},{40,33},{42,33},
	{13,34},{17,34},{18,34},{34,34},{35,34},{36,34},{37,34},{38,34},{39,34},{40,34},{41,34},
	{13,35},{18,35},{34,35},{35,35},{36,35},{37,35},{38,35},{39,35},
	{13,36},{18,36},{19,36},{34,36},{35,36},{36,36},{37,36},{38,36},
	{13,37},{14,37},{19,37},{33,37},{34,37},{35,37},
	{14,38},{15,38},{17,38},{18,38},{19,38},{20,38},{21,38},{22,38},{23,38},{32,38},{33,38},
	{5,39},{6,39},{7,39},{8,39},{9,39},{10,39},{15,39},{16,39},{17,39},{23,39},{24,39},{25,39},{32,39},{36,39},{37,39},{38,39},{39,39},{40,39},{41,39},
	{2,40},{3,40},{4,40},{5,40},{25,40},{30,40},{31,40},{32,40},{42,40},{43,40},
	{1,41},{2,41},{26,41},{27,41},{32,41},{43,41},{44,41},{45,41},
	{0,42},{1,42},{27,42},{32,42},{45,42},{46,42},
	{0,43},{27,43},{32,43},{46,43},
	{0,44},{28,44},{29,44},{30,44}, {31,44}, {46,44},
	{0,45},{46,45},
	{0,46},{1,46},{46,46},
	{1,47},{2,47},{3,47},{4,47},{5,47},{43,47},{44,47},{45,47},
	{5,48},{6,48},{7,48},{8,48},{9,48},{37,48},{38,48},{39,48},{40,48},{41,48},{42,48},{43,48},
	{9,49},{10,49},{11,49},{12,49},{13,49},{33,49},{34,49},{35,49},{36,49},{37,49},
	{13,50},{14,50},{15,50},{16,50},{17,50},{18,50},{19,50},{20,50},{21,50},{22,50},{23,50},{24,50},{25,50},{26,50},{27,50},{28,50},{29,50},{30,50},{31,50},{32,50},{33,50}}
};

GEOMETRY lifebar = {    //struct för ramen kring livet
    100,
    100,
    100,
    
    {
        {0,0}, {1,0}, {2,0}, {3,0}, {4,0}, {5,0}, {6,0}, {7,0}, {8,0}, {9,0}, {10,0}, {11,0}, {12,0}, {13,0}, {14,0}, {15,0}, {16,0}, {17,0}, {18,0}, {19,0}, 
        {20,0}, {21,0}, {22,0}, {23,0}, {24,0}, {25,0}, {26,0}, {27,0}, {28,0}, {29,0}, {30,0}, {31,0}, {32,0}, {33,0}, {34,0}, {35,0}, {36,0}, {37,0},
        {0,1}, {37,1},
        {0,2}, {37,2},
        {0,3}, {37,3},
        {0,4}, {37,4},
        {0,5}, {37,5},
        {0,6}, {37,6},
        {0,7}, {1,7}, {2,7}, {3,7}, {4,7}, {5,7}, {6,7}, {7,7}, {8,7}, {9,7}, {10,7}, {11,7}, {12,7}, {13,7}, {14,7}, {15,7}, {16,7}, {17,7}, {18,7}, {19,7}, 
        {20,7}, {21,7}, {22,7}, {23,7}, {24,7}, {25,7}, {26,7}, {27,7}, {28,7}, {29,7}, {30,7}, {31,7}, {32,7}, {33,7}, {34,7}, {35,7}, {36,7}, {37,7}
    }
    
    
    
};

GEOMETRY life = {    // 1/4 utav livet som skrivs ut 4 gånger i 4 "bars"
    100,
    135,
    100,
    {
        {0,0}, {0,1}, {0,2}, {0,3},
        {1,0}, {1,1}, {1,2}, {1,3},
        {2,0}, {2,1}, {2,2}, {2,3},
        {3,0}, {3,1}, {3,2}, {3,3}, 
        {4,0}, {4,1}, {4,2}, {4,3},
        {5,0}, {5,1}, {5,2}, {5,3},
        {6,0}, {6,1}, {6,2}, {6,3},
        {7,0}, {7,1}, {7,2}, {7,3},
        {8,0}, {8,1}, {8,2}, {8,3},
        {9,0}, {9,1}, {9,2}, {9,3},
        {10,0}, {10,1}, {10,2}, {10,3},
        {11,0}, {11,1}, {11,2}, {11,3},
        {12,0}, {12,1}, {12,2}, {12,3},
        {13,0}, {13,1}, {13,2}, {13,3},
        {14,0}, {14,1}, {14,2}, {14,3},
        {15,0}, {15,1}, {15,2}, {15,3},
        {16,0}, {16,1}, {16,2}, {16,3},
        {17,0}, {17,1}, {17,2}, {17,3},
        {18,0}, {18,1}, {18,2}, {18,3},
        {19,0}, {19,1}, {19,2}, {19,3},
        {20,0}, {20,1}, {20,2}, {20,3},
        {21,0}, {21,1}, {21,2}, {21,3}, 
        {22,0}, {22,1}, {22,2}, {22,3},
        {23,0}, {23,1}, {23,2}, {23,3},
        {24,0}, {24,1}, {24,2}, {24,3},
        {25,0}, {25,1}, {25,2}, {25,3},
        {26,0}, {26,1}, {26,2}, {26,3},
        {27,0}, {27,1}, {27,2}, {27,3},
        {28,0}, {28,1}, {28,2}, {28,3},
        {29,0}, {29,1}, {29,2}, {29,3},
        {30,0}, {30,1}, {30,2}, {30,3},
        {31,0}, {31,1}, {31,2}, {31,3},
        {32,0}, {32,1}, {32,2}, {32,3},
        {33,0}, {33,1}, {33,2}, {33,3}
    }
    
};


GEOMETRY blixten = {
    71,
    36,
    17,
    {{33,0},{34,0},{35,0},
    {26,1},{27,1},{28,1},{29,1},{30,1},{31,1},{32,1},
    {24,2},{25,2},
    {23,3},{24,3},
    {9,4},{10,4},{11,4},{12,4},{22,4},{25,4},
    {13,5},{14,5},{15,5},{16,5},{17,5},{18,5},{19,5},{20,5},{21,5},{22,5},{26,5},
    {11,6},{12,6},{21,6},{26,6},
    {10,7},{20,7},{25,7},
    {8,8},{9,8},{20,8},{25,8},
    {7,9},{19,9},{25,9},
    {6,10},{18,10},{19,10},{25,10},
    {5,11},{16,11},{17,11},{18,11},{25,11},
    {3,12},{4,12},{11,12},{12,12},{13,12},{14,12},{15,12},{18,12},
    {0,13},{1,13},{2,13},{19,13},
    {19,14},
    {19,15},
    {16,16},{17,16},{18,16}}
};

GEOMETRY pointer = {	//en pil för risats attack "pointer"
	100,
	100,
	100,
	{{5,0},{6,0}, {7,0}, {8,0}, {9,0}, {10,0}, {11,0}, {12,0}, {13,0}, {14,0},
	{5,1}, {6,1}, {7,1}, {8,1}, {9,1}, {10,1}, {11,1}, {12,1}, {13,1},{14,1}, {15,1}, {16,1}, {17,1}, {18,1}, {19,1}, {20,1},
	{12,2}, {13,2}, {14,2}, {15,2}, {16,2},{17,2}, {18,2}, {9,2}, {20,2},
	{18,3}, {19,3}, {20,3}, {12,4}, {13,4}, {14,4}, {15,4}, {17,4}, {18,4}, {19,4},
	{10,5}, {11,5}, {12,5}, {13,5}, {14,5}, {17,5}, {18,5}, {19,5},
	{8,6}, {9,6}, {10,6}, {11,6}, {12,6}, {13,6}, {16,6}, {17,6}, {18,6},
	{6,7}, {8,7}, {9,7}, {10,7}, {11,7}, {15,7}, {16,7}, {17,7},
	{4,8}, {5,8}, {6,8}, {7,8}, {8,8}, {9,8}, {14,8}, {15,8}, {16,8}, {17,8},
	{2,9}, {3,9}, {4,9}, {5,9}, {6,9}, {7,9}, {14,9}, {15,9}, {16,9},
	{0,10}, {1,10}, {2,10}, {3,10}, {4,10}, {5,10}, {13,10}, {14,10}, {15,10},
	{0,11}, {1,11}, {2,11}, {3,11}, {12,11}, {13,11}, {14,11}, {15,11},
	{11,12}, {12,12}, {13,12}, {14,12},
	{11,13}, {12,13}, {13,13}, 
	{11,14}, {12,14}}
	
};



GEOMETRY start = {
	100,
	100,
	100,
	{{36,0}, {37,0},
	{35,1}, {38,1},
	{34,2}, {37,2}, {38,2}, {41,2}, {42,2}, {46,2}, {47,2},
	{24,3}, {25,3}, {26,3}, {27,3}, {33,3}, {36,3}, {40,3}, {43,3}, {45,3}, {48,3},
	{24,4}, {27,4}, {30,4}, {31,4}, {32,4}, {33,4}, {34,4}, {35,4}, {36,4}, {37,4}, {38,4}, {40,4}, {44,4}, {48,4}, {52,4}, {53,4}, {54,4},
	{12,5}, {13,5}, {14,5}, {15,5}, {16,5}, {17,5}, {24,5}, {28,5}, {29,5}, {32,5}, {39,5}, {40,5}, {44,5}, {48,5}, {52,5}, {54,5}, {55,5},
	{11,6}, {18,6}, {24,6}, {28,6}, {32,6}, {36,6}, {40,6}, {48,6}, {52,6}, {56,6}, {57,6}, {58,6}, {59,6}, {60,6}, {61,6},
	{10,7}, {19,7}, {24,7}, {31,7}, {35,7}, {37,7}, {39,7}, {40,7}, {48,7}, {52,7}, {56,7}, {61,7},
	{10,8}, {15,8}, {16,8}, {19,8}, {23,8}, {24,8}, {30,8}, {31,8}, {36,8}, {38,8}, {39,8}, {40,8}, {48,8}, {49,8}, {50,8}, {51,8}, {52,8}, {56,8}, {60,8}, {61,8}, 
	{11,9}, {12,9},{15,9},{17,9},{19,9},{20,9},{21,9},{22,9},{25,9},{30,9},{31,9},{32,9},{40,9},{43,9},{45,9},{48,9},{52,9},{53,9},{56,9},{60,9},
	{13,10},{15,10},{16,10},{19,10},{26,10},{32,10},{33,10},{39,10},{40,10},{43,10},{45,10},{47,10},{50,10},{53,10},{56,10},{60,10},
	{13,11},{18,11},{19,11},{22,11},{26,11},{33,11},{34,11},{35,11},{36,11},{37,11},{38,11},{39,11},{40,11},{41,11},{43,11},{44,11},{45,11},{47,11},{50,11},{51,11},{53,11},{60,11},
	{13,12},{18,12},{19.12},{22,12},{23,12},{26,12},{28,12},{29,12},{34,12},{41,12},{42,12},{43,12},{45,12},{47,12},{53,12},{59,12},{60,12},
	{14,13},{18,13},{19,13},{26,13},{28,13},{30,13},{31,13},{34,13},{45,13},{48,13},{52,13},{59,13},
	{14,14},{18,14},{20,14},{25,14},{28,14},{32,14},{33,14},{34,14},{45,14},{48,14},{49,14},{50,14},{51,14},{54,14},{59,14},
	{15,15},{18,15},{21,15},{22,15},{23,15},{24,15},{26,15},{27,15},{28,15},{46,15},{47,15},{51,15},{52,15},{54,15},{58,15},{59,15},
	{15,16},{18,16},{52,16},{53,16},{54,16},{58,16},
	{16,17},{18,17},{55,17},{56,17},{57,17},{58,17},
	{17,18},
	{32,21},
	{32,22},{33,22},
	{32,23},{34,23},
	{32,24},{35,24},{40,24},
	{31,25},{35,25},{39,25},{41,25},
	{31,26},{35,26},{39,26},{41,26},
	{32,27},{36,27},{38,27},{42,27},
	{32,28},{36,28},{38,28},{42,28},
	{0,29},{1,29},{2,29},{3,29},{4,29},{10,29},{16,29},{17,29},{33,29},{36,29},{38,29},{41,29},{43,29},{44,29},{45,29},{46,29},{52,29},{53,29},{54,29},{55,29},{56,29},{62,29},
	{0,30},{1,30},{5,30},{9,30},{16,30},{17,30},{33,30},{37,30},{41,30},{42,30},{47,30},{52,30},{53,30},{57,30},{59,30},{60,30},{62,30},
	{0,31},{1,31},{5,31},{16,31},{17,31},{34,31},{37,31},{40,31},{47,31},{52,31},{53,31},{57,31},{59,31},{60,31},{62,31},
	{0,32},{1,32},{5,32},{8,32},{79,32},{10,32},{16,32},{17,32},{19,32},{20,32},{21,32},{22,32},{25,32},{26,32},{27,32},{34,32},{37,32},{40,32},{45,32},{46,32},{52,32},{53,32},{57,32},{62,32},{64,32},{65,32},{68,32},{69,32},{70,32},{71,32},
	{0,33},{1,33},{5,33},{7,33},{11,33},{13,33},{14,33},{15,33},{16,33},{17,33},{19,33},{20,33},{24,33},{25,33},{27,33},{28,33},{35,33},{39,33},{40,33},{44,33},{52,33},{53,33},{57,33},{59,33},{60,33},{62,33},{63,33},{64,33},{67,33},{68,33},{70,33},{71,33},
	{0,34},{1,34},{2,34},{3,34},{4,34},{7,34},{8,34},{9,34},{10,34},{11,34},{13,34},{16,34},{17,34},{19,34},{20,34},{24,34},{25,34},{27,34},{28,34},{35,34},{39,34},{40,34},{44,34},{52,34},{53,34},{54,34},{55,34},{56,34},{59,34},{60,34},{62,34},{63,34},{67,34},{68,34},{70,34},{71,34},
	{0,35},{1,35},{7,35},{13,35},{16,35},{17,35},{19,35},{20,35},{24,35},{25,35},{27,35},{28,35},{36,35},{38,35},{41,35},{45,35},{46,35},{52,35},{53,35},{59,35},{60,35},{62,35},{64,35},{67,35},{68,35},{70,35},{71,35},{72,35},
	{0,36},{1,36},{8,36},{9,36},{10,36},{11,36},{13,36},{14,36},{15,36},{16,36},{17,36},{19,36},{20,36},{25,36},{26,36},{27,36},{36,36},{38,36},{42,36},{47,36},
	{52,36},{53,36},{59,36},{60,36},{62,36},{64,36},{65,36},{68,36},{69,36},{70,36},{72,36},{73,36},
	{0,37},{1,37},{17,37},{37,37},{40,37},{41,37},{43,37},{48,37},{52,37},{53,37},
	{37,38},{39,38},{42,38},{48,38},{37,38},{39,38},{42,38},{48,38},
	{39,39},{48,39},
	{40,40},{47,40},
	{41,41},{42,41},{43,41},{44,41},{45,41},{46,41},
	{33,48},
	{6,49},{7,49},{8,49},{32,49},{33,49},{40,49},{57,49},
	{6,50},{9,50},{12,50},{13,50},{16,50},{17,50},{21,50},{22,50},{25,50},{26,50},{33,50},{40,50},{57,50},
	{6,51},{9,51},{11,51},{15,51},{18,51},{20,51},{24,51},{33,51},{39,51},{40,51},{41,51},{44,51},{45,51},{52,51},{53,51},{54,51},{57,51},{60,51},{61,51},{62,51},{66,51},{69,51},
	{6,52},{7,52},{8,52},{11,52},{15,52},{16,52},{17,52},{18,52},{21,52},{25,52},{33,52},{40,52},{43,52},{46,52},{52,52},{55,52},{57,52},{59,52},{62,52},{66,52},{69,52},
	{6,53},{11,53},{15,53},{22,53},{26,53},{33,53},{40,53},{43,53},{46,53},{52,53},{55,53},{57,53},{59,53},{62,53},{63,53},{67,53},{69,53},
	{6,54},{11,54},{16,54},{17,54},{18,54},{20,54},{21,54},{24,54},{25,54},{32,54},{33,54},{34,54},{40,54},{41,54},{44,54},{45,54},{52,54},{53,54},{54,54},{57,54},{60,54},{61,54},{63,54},{64,54},{68,54},
	{52,55},{67,55},
	{52,56},{66,56}}

};

static OBJECT pedro_object = 
{
	&pedro,
	5,0,
	1,30,
	draw_object,
	clear_object,
	move_tackle,
	set_object_speed
};

static OBJECT pika_object = 
{
	&pika,
	-5,0,
	70,1,
	draw_object,
	clear_object,
	move_tackle,
	set_object_speed
};

static OBJECT pedro_lifebar = 
{
	&lifebar,
	3,5,
	70,56,
	draw_object,
	clear_object,
	move_object,
	set_object_speed
};

static OBJECT pika_lifebar = 
{
	&lifebar,
	3,5,
	3,12,
	draw_object,
	clear_object,
	move_object,
	set_object_speed
};

static OBJECT pedro_health = 
{
	&life,
	3,5,
	72,58,
	draw_life_object,
	clear_life_object,
	move_object,
	set_object_speed
};

static OBJECT pika_health = 
{
	&life,
	3,5,
	5,14,
	draw_life_object,
	clear_life_object,
	move_object,
	set_object_speed
};


static OBJECT blixt = 
{
    &blixten,
    0,0,
    45,25,
    draw_object,
    clear_object,
    move_object,
    set_object_speed
};

static OBJECT arrow = 
{
	&pointer,
	9,-2,
	25,30,
	draw_object,
	clear_object,
	move_object,
	set_object_speed
};

static OBJECT start_screen = 
{
	&start,
	0,0,
	25,3,
	draw_object,
	clear_object,
	move_object,
	set_object_speed
};